"use client";
import { jsx as _jsx } from "react/jsx-runtime";
import React from "react";
import ReactDOM from "react-dom";
import Theme from "../../Theme/index.js";
const PortalScopeContext = React.createContext({});
export const usePortalScope = () => {
    return React.useContext(PortalScopeContext);
};
/**
 * Disclaimer: Works only for components that don't show the portal immediately
 * That gives Portal time to receive scope on first render
 */
const Portal = (props) => {
    const { children, targetRef } = props;
    /**
     * Check for parent portal to render inside it
     * To avoid z-iondex issues
     * Example:
     * Dropdown rendered on the page should render under the modal
     * Dropdown inside the modal should render above it
     */
    const portal = usePortalScope();
    const nextScopeRef = targetRef || portal.scopeRef;
    /* Preserve the current theme when rendered in body */
    return ReactDOM.createPortal(_jsx(Theme, { children: children }), (nextScopeRef === null || nextScopeRef === void 0 ? void 0 : nextScopeRef.current) || document.body);
};
function PortalScope(props) {
    const { children } = props;
    const ref = React.useRef(null);
    return (_jsx(PortalScopeContext.Provider, { value: { scopeRef: ref }, children: children(ref) }));
}
Portal.Scope = PortalScope;
export default Portal;
