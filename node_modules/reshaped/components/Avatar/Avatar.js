import { jsx as _jsx } from "react/jsx-runtime";
import { classNames, responsivePropDependency } from "../../utilities/helpers.js";
import getHeightStyles from "../../styles/height/index.js";
import Icon from "../Icon/index.js";
import View from "../View/index.js";
import s from "./Avatar.module.css";
const Avatar = (props) => {
    const { color = "neutral", variant, src, size = 12, squared, initials, icon, alt, className, attributes, } = props;
    const radius = squared
        ? responsivePropDependency(size, (size) => {
            if (size >= 24)
                return "large";
            if (size >= 12)
                return "medium";
            return "small";
        })
        : "circular";
    const heightStyles = getHeightStyles(size);
    const rootClassNames = classNames(s.root, className, heightStyles === null || heightStyles === void 0 ? void 0 : heightStyles.classNames, color && s[`--color-${color}`], variant && s[`--variant-${variant}`]);
    const renderContent = () => {
        if (src)
            return (_jsx("img", { role: !initials ? "presentation" : undefined, src: src, alt: alt, className: s.img }));
        if (icon)
            return (_jsx(Icon, { svg: icon, size: responsivePropDependency(size, (size) => Math.ceil(size * 0.4)) }));
        return initials;
    };
    return (_jsx(View, { borderRadius: radius, attributes: Object.assign(Object.assign({}, attributes), { style: Object.assign({}, heightStyles === null || heightStyles === void 0 ? void 0 : heightStyles.variables) }), backgroundColor: variant === "faded" ? `${color}-${variant}` : color, className: rootClassNames, children: renderContent() }));
};
export default Avatar;
