import { jsx as _jsx } from "react/jsx-runtime";
import { classNames } from "../../utilities/helpers.js";
import Flyout from "../_private/Flyout/index.js";
import s from "./Popover.module.css";
import getPaddingStyles from "../../styles/padding/index.js";
const Popover = (props) => {
    var _a;
    const { id, forcePosition, onOpen, onClose, active, defaultActive, children, width, contentGap, variant = "elevated", triggerType = "click", position = "bottom", disableHideAnimation, instanceRef, } = props;
    const padding = (_a = props.padding) !== null && _a !== void 0 ? _a : (variant === "headless" ? 0 : 4);
    const trapFocusMode = props.trapFocusMode || (triggerType === "hover" ? "content-menu" : undefined);
    const paddingStyles = getPaddingStyles(padding);
    const contentClassName = classNames(s.content, !!width && s["content--has-width"], variant && s[`content--variant-${variant}`], paddingStyles === null || paddingStyles === void 0 ? void 0 : paddingStyles.classNames);
    return (
    // @ts-ignore
    _jsx(Flyout, { id: id, instanceRef: instanceRef, position: position, forcePosition: forcePosition, onOpen: onOpen, onClose: onClose, trapFocusMode: trapFocusMode, triggerType: triggerType, active: active, defaultActive: defaultActive, width: width, disableHideAnimation: disableHideAnimation, contentGap: contentGap, contentClassName: contentClassName, contentAttributes: { style: Object.assign({}, paddingStyles === null || paddingStyles === void 0 ? void 0 : paddingStyles.variables) }, children: children }));
};
Popover.Trigger = Flyout.Trigger;
Popover.Content = Flyout.Content;
export default Popover;
