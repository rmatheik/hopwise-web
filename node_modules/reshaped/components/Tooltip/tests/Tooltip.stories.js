var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { Example } from "../../../utilities/storybook/index.js";
import Tooltip from "../index.js";
import Button from "../../Button/index.js";
import View from "../../View/index.js";
import useResponsiveClientValue from "../../../hooks/useResponsiveClientValue.js";
export default {
    title: "Components/Tooltip",
    component: Tooltip,
    parameters: {
        iframe: {
            url: "https://reshaped.so/docs/components/tooltip",
        },
    },
};
const Demo = (props) => {
    const { position } = props, rest = __rest(props, ["position"]);
    return (<Tooltip text={position} position={position} {...rest}>
			{(attributes) => <Button attributes={attributes}>Show tooltip</Button>}
		</Tooltip>);
};
const DemoResponsive = (props) => {
    const { position } = props, rest = __rest(props, ["position"]);
    const screenSize = useResponsiveClientValue({
        s: "small",
        m: "medium",
    });
    return (<Tooltip text={position} position={position} {...rest} active={screenSize === "small"}>
			{(attributes) => <Button attributes={attributes}>Show tooltip</Button>}
		</Tooltip>);
};
export const position = () => (<Example>
		<Example.Item title="position: bottom-start">
			<Demo position="bottom-start"/>
		</Example.Item>
		<Example.Item title="position: bottom">
			<Demo position="bottom"/>
		</Example.Item>
		<Example.Item title="position: bottom-end">
			<Demo position="bottom-end"/>
		</Example.Item>
		<Example.Item title="position: top-start">
			<Demo position="top-start"/>
		</Example.Item>
		<Example.Item title="position: top">
			<Demo position="top"/>
		</Example.Item>
		<Example.Item title="position: top-end">
			<Demo position="top-end"/>
		</Example.Item>

		<Example.Item title="position: start">
			<View align="end">
				<Demo position="start"/>
			</View>
		</Example.Item>

		<Example.Item title="position: end">
			<Demo position="end"/>
		</Example.Item>
	</Example>);
export const controlled = () => (<Example>
		<Example.Item title="active, controlled, position: bottom">
			<Demo position="bottom"/>
		</Example.Item>
	</Example>);
export const edgeCases = () => (<Example>
		<Example.Item title="without text">
			<Tooltip>{() => <Button>Button</Button>}</Tooltip>
		</Example.Item>
		<Example.Item title="responsive visibility">
			<DemoResponsive />
		</Example.Item>
	</Example>);
