"use client";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import React from "react";
import CalendarControlled from "./CalendarControlled.js";
const CalendarUncontrolled = (props) => {
    const { onChange, defaultValue, range } = props, controlledProps = __rest(props, ["onChange", "defaultValue", "range"]);
    const [value, setValue] = React.useState(defaultValue || null);
    if (range) {
        return (_jsx(CalendarControlled, Object.assign({ range: true }, controlledProps, { value: value, onChange: (args) => {
                setValue(args.value);
                onChange === null || onChange === void 0 ? void 0 : onChange(args);
            } })));
    }
    return (_jsx(CalendarControlled, Object.assign({}, controlledProps, { value: value, onChange: (args) => {
            setValue(args.value);
            onChange === null || onChange === void 0 ? void 0 : onChange(args);
        } })));
};
export default CalendarUncontrolled;
