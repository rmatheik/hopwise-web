"use client";
import { jsx as _jsx } from "react/jsx-runtime";
import React from "react";
import SliderControlled from "./SliderControlled.js";
const SliderUncontrolled = (props) => {
    const { min, max, onChange, range } = props;
    const defaultMinValue = ("defaultMinValue" in props && props.defaultMinValue !== undefined && props.defaultMinValue) ||
        ("defaultValue" in props && props.defaultValue !== undefined && props.defaultValue) ||
        min;
    const defaultMaxValue = ("defaultMaxValue" in props && props.defaultMaxValue !== undefined && props.defaultMaxValue) ||
        ("defaultValue" in props && props.defaultValue !== undefined && props.defaultValue) ||
        (range ? max : min);
    const [minValue, setMinValue] = React.useState(defaultMinValue);
    const [maxValue, setMaxValue] = React.useState(defaultMaxValue);
    const handleSingleChange = (args) => {
        if (range)
            return;
        setMaxValue(args.value);
        onChange === null || onChange === void 0 ? void 0 : onChange(args);
    };
    const handleRangeChange = (args) => {
        if (!range)
            return;
        setMinValue(args.minValue);
        setMaxValue(args.maxValue);
        onChange === null || onChange === void 0 ? void 0 : onChange(args);
    };
    if (range) {
        return (_jsx(SliderControlled, Object.assign({}, props, { min: min, max: max, minValue: minValue, maxValue: maxValue, defaultMinValue: undefined, defaultMaxValue: undefined, onChange: handleRangeChange })));
    }
    return (_jsx(SliderControlled, Object.assign({}, props, { min: min, max: max, value: maxValue, defaultValue: undefined, onChange: handleSingleChange })));
};
export default SliderUncontrolled;
