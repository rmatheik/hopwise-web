import Card from "../../Card/index.js";
import Button from "../../Button/index.js";
import View from "../../View/index.js";
import MenuItem from "../../MenuItem/index.js";
import Theme, { useTheme } from "../index.js";
import { Example } from "../../../utilities/storybook/index.js";
export default {
    title: "Utilities/Theme",
    component: Theme,
    parameters: {
        iframe: {
            url: "https://reshaped.so/docs/utilities/theme",
        },
    },
};
const UncontrolledDemo = () => {
    const { setTheme, theme } = useTheme();
    return (<Button color="primary" onClick={() => setTheme(theme === "reshaped" ? "fake" : "reshaped")}>
			Toggle theme
		</Button>);
};
export const uncontrolled = () => {
    return (<Example>
			<Example.Item title="switches theme using useTheme hooks">
				<UncontrolledDemo />
			</Example.Item>
		</Example>);
};
const Demo = () => {
    const { invertColorMode } = useTheme();
    return (<View gap={3}>
			<Button onClick={invertColorMode}>Invert mode</Button>

			<MenuItem selected>Test transition</MenuItem>

			<Card>Default card</Card>

			<Theme colorMode="inverted">
				<Card>Inverted card</Card>
			</Theme>
		</View>);
};
export const edgeCases = () => (<Example>
		<Example.Item title="should have no transitions while switching color mode">
			<Demo />
		</Example.Item>
	</Example>);
