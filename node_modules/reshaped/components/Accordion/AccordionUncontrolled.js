"use client";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx } from "react/jsx-runtime";
import React from "react";
import AccordionControlled from "./AccordionControlled.js";
const AccordionUncontrolled = (props) => {
    const { defaultActive, onToggle } = props, controlledProps = __rest(props, ["defaultActive", "onToggle"]);
    const [active, setActive] = React.useState(defaultActive || false);
    const handleToggle = (active) => {
        setActive(active);
        onToggle === null || onToggle === void 0 ? void 0 : onToggle(active);
    };
    return _jsx(AccordionControlled, Object.assign({}, controlledProps, { onToggle: handleToggle, active: active }));
};
export default AccordionUncontrolled;
