import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { classNames } from "../../utilities/helpers.js";
import Text from "../Text/index.js";
import Icon from "../Icon/index.js";
import IconClose from "../../icons/Close.js";
import Actionable from "../Actionable/index.js";
import BadgeContainer from "./BadgeContainer.js";
import s from "./Badge.module.css";
const Badge = (props) => {
    const { children, color, rounded, size = "medium", icon, endIcon, variant, hidden, href, onClick, onDismiss, dismissAriaLabel, className, attributes, } = props;
    const isActionable = !!(onClick || href);
    const iconSize = size === "large" ? 4 : 3.5;
    const rootClassName = classNames(s.root, className, rounded && s["--rounded"], hidden && s["--hidden"], size && s[`--size-${size}`], color && s[`--color-${color}`], variant && s[`--variant-${variant}`], isActionable && s["--actionable"]);
    return (_jsxs(Actionable, { onClick: onClick, href: href, className: rootClassName, attributes: attributes, children: [icon && _jsx(Icon, { svg: icon, autoWidth: true, size: iconSize }), children && (_jsx(Text, { variant: size === "large" ? "body-3" : "caption-1", weight: "medium", attributes: {
                    "aria-hidden": hidden ? "true" : undefined,
                }, children: children })), endIcon && _jsx(Icon, { svg: endIcon, autoWidth: true, size: iconSize }), onDismiss && (_jsx(Actionable, { onClick: onDismiss, className: s.dismiss, as: "span", attributes: { "aria-label": dismissAriaLabel }, children: _jsx(Icon, { svg: IconClose, size: iconSize }) }))] }));
};
Badge.Container = BadgeContainer;
export default Badge;
