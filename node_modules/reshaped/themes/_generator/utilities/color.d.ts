/**
 * Some of the color conversion utilities are taken from https://github.com/hsluv/hsluv-javascript
 * They have been rewritten for easier color transformations in the theme generation case
 */
type RgbColor = {
    r: number;
    g: number;
    b: number;
};
type HslColor = {
    h: number;
    s: number;
    l: number;
};
type XyzColor = {
    x: number;
    y: number;
    z: number;
};
type LuvColor = {
    l: number;
    u: number;
    v: number;
};
type LchColor = {
    l: number;
    c: number;
    h: number;
};
type BoundingLines = {
    r0s: number;
    r0i: number;
    r1s: number;
    r1i: number;
    g0s: number;
    g0i: number;
    g1s: number;
    g1i: number;
    b0s: number;
    b0i: number;
    b1s: number;
    b1i: number;
};
/**
 * Color utilities
 */
export declare const calculateBoundingLines: (l: number) => BoundingLines;
export declare const distanceFromOriginAngle: (slope: number, intercept: number, angle: number) => number;
export declare const calcMaxChromaHsluv: (h: number, boundingLines: BoundingLines) => number;
export declare function hexToRgb(hex: string): RgbColor;
export declare const rgbToHsl: ({ r, g, b }: RgbColor) => HslColor;
export declare const hslToRgb: ({ h, s, l }: HslColor) => RgbColor;
export declare const rgbToHex: ({ r, g, b }: RgbColor) => string;
export declare const toLinear: (c: number) => number;
export declare const fromLinear: (c: number) => number;
export declare const rgbToXyz: ({ r, g, b }: RgbColor) => {
    x: number;
    y: number;
    z: number;
};
export declare const xyzToRgb: ({ x, y, z }: XyzColor) => RgbColor;
export declare const yToL: (y: number) => number;
export declare const lToY: (l: number) => number;
export declare const xyzToLuv: ({ x, y, z }: XyzColor) => LuvColor;
export declare const luvToXyz: ({ l, u, v }: LuvColor) => XyzColor;
export declare const luvToLch: ({ l, u, v }: LuvColor) => LchColor;
export declare const lchToLuv: ({ l, c, h }: LchColor) => LuvColor;
export declare const lchToHsluv: ({ l, c, h }: LchColor) => HslColor;
export declare const hsluvToLch: ({ h, s, l }: HslColor) => LchColor;
export declare const hsluvToHex: (hsl: HslColor) => string;
export declare const hexToHsl: (H: string) => HslColor;
export declare const hexToHsluv: (hex: string) => HslColor;
export declare const hslToHex: (hsl: HslColor) => string;
/**
 * Normalizing utilities
 */
export declare const getDarkModeColor: (hsl: HslColor) => {
    s: number;
    l: number;
    h: number;
};
export declare const getLuminanceDelta: (luminance: number) => number;
export declare function getRgbLuminance({ r, g, b }: RgbColor): number;
export declare const getOnColor: (args: {
    bgHexColor: string;
    mode: "light" | "dark";
    lightHexColor?: string;
    darkHexColor?: string;
}) => string;
export {};
