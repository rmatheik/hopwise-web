"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mediaTemplate = exports.variablesTemplate = exports.createMedia = exports.createVariable = exports.getVariableName = void 0;
const string_1 = require("../../../utilities/string");
const getVariableName = (tokenName, tokenType) => {
    const value = ["rs", tokenType && (0, string_1.camelToKebab)(tokenType), (0, string_1.camelToKebab)(tokenName)]
        .filter(Boolean)
        .join("-");
    return `--${value}`;
};
exports.getVariableName = getVariableName;
const createVariable = (token) => {
    const variableName = (0, exports.getVariableName)(token.name, token.tokenType);
    return `${variableName}: ${token.value};`;
};
exports.createVariable = createVariable;
const createMedia = (token) => `@custom-media ${(0, exports.getVariableName)(token.name, token.tokenType)} ${token.value};`;
exports.createMedia = createMedia;
const variablesTemplate = (themeName, tokens) => {
    const filteredTokens = {
        root: [],
        light: [],
        dark: [],
    };
    tokens.forEach((token) => {
        if (token.mode === "light")
            filteredTokens.light.push(token);
        if (token.mode === "dark")
            filteredTokens.dark.push(token);
        if (!token.mode)
            filteredTokens.root.push(token);
    });
    let code = "";
    Object.entries(filteredTokens).forEach(([type, tokens]) => {
        const selector = type === "root"
            ? `[data-rs-theme="${themeName}"]`
            : `[data-rs-theme="${themeName}"][data-rs-color-mode="${type}"]`;
        if (!tokens.length)
            return;
        code += `
			${selector} {
					${tokens.map((token) => (0, exports.createVariable)(token)).join("\n")}
			}
		`;
    });
    return code;
};
exports.variablesTemplate = variablesTemplate;
const mediaTemplate = (tokens) => `
	${tokens.map((token) => (0, exports.createMedia)(token)).join("\n")}
`;
exports.mediaTemplate = mediaTemplate;
