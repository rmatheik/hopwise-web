type ID = number;
type Item<T> = {
    previousId?: ID | null;
    nextId?: ID | null;
    data: T;
};
declare class Chain<T = unknown> {
    chain: Record<ID, Item<T>>;
    tailId: ID | null;
    idCounter: ID;
    generateId(): number;
    getAll(): Record<number, Item<T>>;
    get(id: ID): Item<T>;
    isLast(id: ID): boolean;
    isEmpty(): boolean;
    add(data: T): number;
    remove(id: ID): T | undefined;
    removePreviousTill(id: ID, condition: (item: Item<T>) => boolean): T | undefined;
}
export default Chain;
