import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import View from "../../components/View/index.js";
import Text from "../../components/Text/index.js";
import s from "./Example.module.css";
const Example = (props) => {
    return (_jsxs(View, { gap: 3, attributes: props.title ? { style: { marginTop: -17 } } : undefined, children: [props.title && (_jsx(View, { bleed: 4, paddingInline: 4, paddingBlock: 3, backgroundColor: "neutral-faded", borderColor: "neutral-faded", position: "sticky", insetTop: 0, zIndex: 100, children: props.title })), props.children] }));
};
const ExampleItem = (props) => {
    const { children } = props;
    const title = typeof props.title === "string" ? [props.title] : props.title;
    return (_jsxs(View, { borderColor: "neutral-faded", borderRadius: "medium", overflow: "hidden", children: [title && (_jsx(View, { paddingInline: 4, paddingBlock: 3, backgroundColor: "neutral-faded", children: title.map((line, index) => (_jsx(Text, { variant: "body-3", color: index > 0 ? "neutral-faded" : "neutral", children: line }, index))) })), _jsx(View, { padding: 4, className: s.root, children: children })] }));
};
Example.Item = ExampleItem;
export default Example;
