import type { FocusableElement } from "./types";
export declare const focusableSelector = "a,button,input:not([type=\"hidden\"]),textarea,select,details,[tabindex]:not([tabindex=\"-1\"])";
export declare const getActiveElement: () => HTMLButtonElement;
export declare const focusElement: (el: FocusableElement, options?: {
    pseudoFocus?: boolean;
}) => void;
export declare const getFocusableElements: (rootEl: HTMLElement, options?: {
    additionalElement?: FocusableElement | null;
}) => FocusableElement[];
export declare const getFocusData: (args: {
    root: HTMLElement;
    target: "next" | "prev" | "first" | "last";
    options?: {
        circular?: boolean;
        additionalElement?: FocusableElement | null;
    };
}) => {
    overflow: boolean;
    el: FocusableElement;
};
export declare const focusNextElement: (root: HTMLElement) => void;
export declare const focusPreviousElement: (root: HTMLElement) => void;
export declare const focusFirstElement: (root: HTMLElement) => void;
export declare const focusLastElement: (root: HTMLElement) => void;
