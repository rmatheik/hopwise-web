import { FJ } from '@firejet-sync/shared/types';
import { RenderPermutation } from '../addComponent/getRenderInfo';
export declare const INDEX_HTML_FILENAME = "index.html";
export declare const INDEX_TS_FILENAME = "firejet.render.ts";
export declare const ENTRY_TS_FILENAME = "firejet.entry.ts";
export declare const COMPILED_ENTRY_OUTDIR = "fj-component-library-dist";
export declare const COMPILED_ENTRY_FILENAME = "fj-component-library";
export declare const COMPILED_ENTRY_GLOBAL_NAME = "ThisShouldNotBeRequiredForImporting_FJComponentLibrary";
export declare const BASE_CSS_FILENAME = "fjdefaultstyles.css";
export declare const EXTRA_CSS_FILENAME = "fjextrastyles.css";
export declare const COMPILED_STYLE_FILENAME = "style.css";
export type ComponentFramework = 'react' | 'vue';
export declare function getFrameworkFromCLIConfig(groupConfig: FJ.FireJetConfigGroupResolved): ComponentFramework;
export declare function makeRenderComponentBaseDir(baseFolderPath: string, projectFramework: ComponentFramework): Promise<void>;
export interface PopulateRenderComponentDirOpts {
    /**Used to resolve paths relative to root from where the vite render is done*/
    renderFolderPath: string;
    /**Used to resolve paths relative to root */
    rootFolderPath: string;
    /**where components should be exported from */
    componentEntryPath: string;
    renderPermutations: RenderPermutation[];
    group: FJ.FireJetConfigGroupResolved;
}
export declare function getComponentEntryPointsCode(opts: PopulateRenderComponentDirOpts): Promise<string>;
export declare function populateRenderComponentDir(opts: PopulateRenderComponentDirOpts): Promise<void>;
export declare function getImportStmtFromCompiledEntry(component: FJ.BaseImportable, rootDir?: string): string;
export declare function getImportStmt(component: FJ.BaseImportable, rootDir?: string): string;
export declare function getExportStmt(component: FJ.BaseImportable, rootDir?: string): string;
