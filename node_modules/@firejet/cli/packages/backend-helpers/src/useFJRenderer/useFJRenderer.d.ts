import { InlineConfig } from 'vite';
import { Page } from 'playwright-core';
import { ConversionConfig, GeneratedFolder } from '@firejet-sync/shared/types';
export declare function useFJRenderer(folder: GeneratedFolder, opts?: {
    skipRender: boolean;
    framework: ConversionConfig["framework"];
}): Promise<{
    htmlStr: string;
    base64: string;
}>;
export type RenderedImages = Awaited<ReturnType<typeof getRenderedImages>>;
/**This function requires that assets be passed with the generated folder */
export declare function getRenderedImages(folder: GeneratedFolder, screenSizes: number[], height?: number): Promise<{
    screenSize: number;
    image: Buffer;
}[]>;
export declare function cleanupBrowser(): Promise<void>;
export declare function generateSingleHTML(viteConfig: InlineConfig): Promise<any>;
export declare function runFunctionOnUrl<T>(url: string, action: (page: Page) => Promise<T>, preAction?: (page: Page) => Promise<void>): Promise<T>;
export declare function openProjectInBrowser<T>(action: (page: Page) => Promise<T>, viteConfig: InlineConfig, printUrls?: boolean): Promise<T | null>;
