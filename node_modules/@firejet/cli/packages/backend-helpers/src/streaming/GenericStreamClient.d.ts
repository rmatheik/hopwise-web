import { Response } from 'express';
export interface ClientConfig {
    abortController?: AbortController;
    fallible: boolean;
}
export interface StreamEvent {
    event: string;
    data: object;
}
export declare class GenericStreamClient {
    res: Response;
    cfg: ClientConfig;
    constructor(res: Response, config?: Partial<ClientConfig>);
    protected _sendMessage(msg: string): Promise<void>;
    send(event: string, data: object): Promise<void>;
    finish(data: object, isError?: boolean): Promise<void>;
}
