import { Coord, Rectangle } from '@firejet-sync/shared/types';
/**Makes the smallRect fit within the bigRect by reducing the size of smallRect */
export declare function containRectangleWithin<T extends Rectangle>(bigRect: Rectangle, smallRect: T): T & {
    x: number;
    y: number;
    width: number;
    height: number;
};
/** If they are the same size, contains will return true*/
export declare function contains(bigRect: Rectangle, smallRect: Rectangle, thresholdFactor?: number): boolean;
export declare function containsPoint(point: Coord, rect: Rectangle): boolean;
export declare function getMinContainingBox(rects: Rectangle[]): Rectangle;
export declare function getContainingBox(rects: Rectangle[]): Rectangle & {
    topLeft: {
        x: number;
        y: number;
    };
    bottomRight: {
        x: number;
        y: number;
    };
    center: {
        x: number;
        y: number;
    };
    size: number;
    TOP: number;
    BOTTOM: number;
    LEFT: number;
    RIGHT: number;
    HCENTER: number;
    VCENTER: number;
    horizontal: {
        start: number;
        end: number;
        center: number;
        size: number;
    };
    vertical: {
        start: number;
        end: number;
        center: number;
        size: number;
    };
};
export declare function overlaps(rect1: Rectangle, rect2: Rectangle): boolean;
export declare function overlapsY(rect1: Rectangle, rect2: Rectangle): boolean;
export declare function overlapsX(rect1: Rectangle, rect2: Rectangle): boolean;
export declare function calculateOverlap(rect1: Rectangle, rect2: Rectangle): number;
export declare function calculateOverlapY(rect1: Rectangle, rect2: Rectangle): number;
export declare function calculateOverlapX(rect1: Rectangle, rect2: Rectangle): number;
export declare function getIntersectionRect(rect1: Rectangle | null | undefined, rect2: Rectangle | null | undefined): Rectangle | null;
export declare function containsWidth(bigRect: Rectangle, smallRect: Rectangle, thresholdFactor?: number): boolean;
export declare function containsHeight(bigRect: Rectangle, smallRect: Rectangle, thresholdFactor?: number): boolean;
export declare function calculateIntersectionOverUnion(rect1: Rectangle | null | undefined, rect2: Rectangle | null | undefined): number;
