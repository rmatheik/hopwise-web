interface IIsObject {
    (item: any): boolean;
}
interface IObject {
    [key: string]: any;
}
interface IDeepMerge {
    (target: IObject, ...sources: Array<IObject>): IObject;
}
/**
 * @description Method to check if an item is an object. Date and Function are considered
 * an object, so if you need to exclude those, please update the method accordingly.
 * @param item - The item that needs to be checked
 * @return {Boolean} Whether or not @item is an object
 */
export declare const isObject: IIsObject;
/**
 * @description Method to perform a deep merge of objects
 * @param {Object} target - The targeted object that needs to be merged with the supplied @sources
 * @param {Array<Object>} sources - The source(s) that will be used to update the @target object
 * @return {Object} The final merged object
 */
export declare const deepMerge: IDeepMerge;
export {};
