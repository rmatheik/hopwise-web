import { Database } from '@firejet-sync/shared/types';
export declare const supabase: import("@supabase/supabase-js").SupabaseClient<Database, "public", {
    Tables: {
        change_log: {
            Row: {
                created_at: string | null;
                desc: string | null;
                id: number;
                title: string | null;
                type: Database["public"]["Enums"]["changelog_type"] | null;
            };
            Insert: {
                created_at?: string | null;
                desc?: string | null;
                id?: number;
                title?: string | null;
                type?: Database["public"]["Enums"]["changelog_type"] | null;
            };
            Update: {
                created_at?: string | null;
                desc?: string | null;
                id?: number;
                title?: string | null;
                type?: Database["public"]["Enums"]["changelog_type"] | null;
            };
            Relationships: [];
        };
        feedback_log: {
            Row: {
                codeNotReadable: boolean | null;
                codeNotResponsive: boolean | null;
                created_at: string | null;
                detailedIssues: string | null;
                email: string | null;
                emotionalState: string | null;
                featureLacks: string | null;
                gptEnhanced: boolean | null;
                id: number;
                imgUrl: string | null;
                imgUrls: string[] | null;
                negativeFeedback: string | null;
                notPixelPerfect: boolean | null;
                positiveFeedback: string | null;
                priceFeedback: string | null;
                projectUrl: string | null;
                rawTree: string | null;
                renderImgUrl: string | null;
                selectedFrame: import("@firejet-sync/shared/types").Json | null;
                uuid: string | null;
            };
            Insert: {
                codeNotReadable?: boolean | null;
                codeNotResponsive?: boolean | null;
                created_at?: string | null;
                detailedIssues?: string | null;
                email?: string | null;
                emotionalState?: string | null;
                featureLacks?: string | null;
                gptEnhanced?: boolean | null;
                id?: number;
                imgUrl?: string | null;
                imgUrls?: string[] | null;
                negativeFeedback?: string | null;
                notPixelPerfect?: boolean | null;
                positiveFeedback?: string | null;
                priceFeedback?: string | null;
                projectUrl?: string | null;
                rawTree?: string | null;
                renderImgUrl?: string | null;
                selectedFrame?: import("@firejet-sync/shared/types").Json | null;
                uuid?: string | null;
            };
            Update: {
                codeNotReadable?: boolean | null;
                codeNotResponsive?: boolean | null;
                created_at?: string | null;
                detailedIssues?: string | null;
                email?: string | null;
                emotionalState?: string | null;
                featureLacks?: string | null;
                gptEnhanced?: boolean | null;
                id?: number;
                imgUrl?: string | null;
                imgUrls?: string[] | null;
                negativeFeedback?: string | null;
                notPixelPerfect?: boolean | null;
                positiveFeedback?: string | null;
                priceFeedback?: string | null;
                projectUrl?: string | null;
                rawTree?: string | null;
                renderImgUrl?: string | null;
                selectedFrame?: import("@firejet-sync/shared/types").Json | null;
                uuid?: string | null;
            };
            Relationships: [];
        };
        fonts: {
            Row: {
                copyright: string | null;
                family_name: string;
                full_name: string;
                id: number;
                postscript_name: string;
                subfamily_name: string;
                url: string | null;
                version: string | null;
            };
            Insert: {
                copyright?: string | null;
                family_name: string;
                full_name: string;
                id?: number;
                postscript_name: string;
                subfamily_name: string;
                url?: string | null;
                version?: string | null;
            };
            Update: {
                copyright?: string | null;
                family_name?: string;
                full_name?: string;
                id?: number;
                postscript_name?: string;
                subfamily_name?: string;
                url?: string | null;
                version?: string | null;
            };
            Relationships: [];
        };
        hosted_preview: {
            Row: {
                created_at: string;
                files: import("@firejet-sync/shared/types").Json | null;
                id: string;
            };
            Insert: {
                created_at?: string;
                files?: import("@firejet-sync/shared/types").Json | null;
                id?: string;
            };
            Update: {
                created_at?: string;
                files?: import("@firejet-sync/shared/types").Json | null;
                id?: string;
            };
            Relationships: [];
        };
        key_pairs: {
            Row: {
                created_at: string | null;
                id: number;
                read_key: string | null;
                session: import("@firejet-sync/shared/types").Json | null;
                write_key: string;
            };
            Insert: {
                created_at?: string | null;
                id?: number;
                read_key?: string | null;
                session?: import("@firejet-sync/shared/types").Json | null;
                write_key?: string;
            };
            Update: {
                created_at?: string | null;
                id?: number;
                read_key?: string | null;
                session?: import("@firejet-sync/shared/types").Json | null;
                write_key?: string;
            };
            Relationships: [];
        };
        onboarding_steps: {
            Row: {
                created_at: string;
                desc: string | null;
                id: number;
                media_url: string | null;
                title: string | null;
            };
            Insert: {
                created_at?: string;
                desc?: string | null;
                id?: number;
                media_url?: string | null;
                title?: string | null;
            };
            Update: {
                created_at?: string;
                desc?: string | null;
                id?: number;
                media_url?: string | null;
                title?: string | null;
            };
            Relationships: [];
        };
        payment_details: {
            Row: {
                created_at: string | null;
                id: number;
                subscription_id: string;
                user_id: string;
            };
            Insert: {
                created_at?: string | null;
                id?: number;
                subscription_id: string;
                user_id: string;
            };
            Update: {
                created_at?: string | null;
                id?: number;
                subscription_id?: string;
                user_id?: string;
            };
            Relationships: [{
                foreignKeyName: "payment_details_user_id_fkey";
                columns: ["user_id"];
                isOneToOne: false;
                referencedRelation: "users";
                referencedColumns: ["id"];
            }, {
                foreignKeyName: "payment_details_user_id_fkey";
                columns: ["user_id"];
                isOneToOne: false;
                referencedRelation: "users_view";
                referencedColumns: ["id"];
            }];
        };
        payment_details_dev: {
            Row: {
                created_at: string | null;
                id: number;
                subscription_id: string;
                user_id: string;
            };
            Insert: {
                created_at?: string | null;
                id?: number;
                subscription_id: string;
                user_id: string;
            };
            Update: {
                created_at?: string | null;
                id?: number;
                subscription_id?: string;
                user_id?: string;
            };
            Relationships: [{
                foreignKeyName: "payment_details_dev_user_id_fkey";
                columns: ["user_id"];
                isOneToOne: false;
                referencedRelation: "users";
                referencedColumns: ["id"];
            }, {
                foreignKeyName: "payment_details_dev_user_id_fkey";
                columns: ["user_id"];
                isOneToOne: false;
                referencedRelation: "users_view";
                referencedColumns: ["id"];
            }];
        };
        signups: {
            Row: {
                company_name: string | null;
                created_at: string | null;
                email: string | null;
                id: number;
                intended_use: string | null;
                job_title: string | null;
                purpose: string | null;
                team_id: string;
            };
            Insert: {
                company_name?: string | null;
                created_at?: string | null;
                email?: string | null;
                id?: number;
                intended_use?: string | null;
                job_title?: string | null;
                purpose?: string | null;
                team_id?: string;
            };
            Update: {
                company_name?: string | null;
                created_at?: string | null;
                email?: string | null;
                id?: number;
                intended_use?: string | null;
                job_title?: string | null;
                purpose?: string | null;
                team_id?: string;
            };
            Relationships: [];
        };
        sync_files: {
            Row: {
                created_at: string | null;
                file: import("@firejet-sync/shared/types").Json;
                id: number;
                path: string;
                project: number;
                updated_by: string | null;
            };
            Insert: {
                created_at?: string | null;
                file: import("@firejet-sync/shared/types").Json;
                id?: number;
                path: string;
                project: number;
                updated_by?: string | null;
            };
            Update: {
                created_at?: string | null;
                file?: import("@firejet-sync/shared/types").Json;
                id?: number;
                path?: string;
                project?: number;
                updated_by?: string | null;
            };
            Relationships: [{
                foreignKeyName: "sync_files_project_fkey";
                columns: ["project"];
                isOneToOne: false;
                referencedRelation: "sync_projects";
                referencedColumns: ["id"];
            }];
        };
        sync_permissions: {
            Row: {
                created_at: string | null;
                id: number;
                permissions: Database["public"]["Enums"]["user_permissions"];
                project_id: number;
                user: string;
            };
            Insert: {
                created_at?: string | null;
                id?: number;
                permissions: Database["public"]["Enums"]["user_permissions"];
                project_id: number;
                user: string;
            };
            Update: {
                created_at?: string | null;
                id?: number;
                permissions?: Database["public"]["Enums"]["user_permissions"];
                project_id?: number;
                user?: string;
            };
            Relationships: [{
                foreignKeyName: "sync_permissions_project_id_fkey";
                columns: ["project_id"];
                isOneToOne: false;
                referencedRelation: "sync_projects";
                referencedColumns: ["id"];
            }, {
                foreignKeyName: "sync_permissions_user_fkey";
                columns: ["user"];
                isOneToOne: false;
                referencedRelation: "users";
                referencedColumns: ["id"];
            }, {
                foreignKeyName: "sync_permissions_user_fkey";
                columns: ["user"];
                isOneToOne: false;
                referencedRelation: "users_view";
                referencedColumns: ["id"];
            }];
        };
        sync_projects: {
            Row: {
                created_at: string | null;
                id: number;
                project_permissions: Database["public"]["Enums"]["project_permissions"];
            };
            Insert: {
                created_at?: string | null;
                id?: number;
                project_permissions?: Database["public"]["Enums"]["project_permissions"];
            };
            Update: {
                created_at?: string | null;
                id?: number;
                project_permissions?: Database["public"]["Enums"]["project_permissions"];
            };
            Relationships: [];
        };
        sync_projects_meta: {
            Row: {
                created_at: string | null;
                locked_by: string | null;
                project_id: number;
                project_name: string;
            };
            Insert: {
                created_at?: string | null;
                locked_by?: string | null;
                project_id: number;
                project_name?: string;
            };
            Update: {
                created_at?: string | null;
                locked_by?: string | null;
                project_id?: number;
                project_name?: string;
            };
            Relationships: [{
                foreignKeyName: "sync_projects_meta_locked_by_fkey";
                columns: ["locked_by"];
                isOneToOne: false;
                referencedRelation: "users";
                referencedColumns: ["id"];
            }, {
                foreignKeyName: "sync_projects_meta_locked_by_fkey";
                columns: ["locked_by"];
                isOneToOne: false;
                referencedRelation: "users_view";
                referencedColumns: ["id"];
            }, {
                foreignKeyName: "sync_projects_meta_project_id_fkey";
                columns: ["project_id"];
                isOneToOne: true;
                referencedRelation: "sync_projects";
                referencedColumns: ["id"];
            }];
        };
        tailwind_dict_cache: {
            Row: {
                created_at: string | null;
                dict_string: import("@firejet-sync/shared/types").Json;
                hash_val: string;
                id: number;
            };
            Insert: {
                created_at?: string | null;
                dict_string: import("@firejet-sync/shared/types").Json;
                hash_val: string;
                id?: number;
            };
            Update: {
                created_at?: string | null;
                dict_string?: import("@firejet-sync/shared/types").Json;
                hash_val?: string;
                id?: number;
            };
            Relationships: [];
        };
        user_compiled_codebase: {
            Row: {
                code_js: string;
                created_at: string;
                enterprise_team_id: string;
                group_name: string;
                id: string;
                style_css: string;
            };
            Insert: {
                code_js: string;
                created_at?: string;
                enterprise_team_id: string;
                group_name: string;
                id?: string;
                style_css: string;
            };
            Update: {
                code_js?: string;
                created_at?: string;
                enterprise_team_id?: string;
                group_name?: string;
                id?: string;
                style_css?: string;
            };
            Relationships: [];
        };
        user_components: {
            Row: {
                code: string;
                code_meta_tree: import("@firejet-sync/shared/types").Json;
                component_def: import("@firejet-sync/shared/types").Json | null;
                component_name: string;
                conditionals: import("@firejet-sync/shared/types").Json | null;
                fixed_scene_node: import("@firejet-sync/shared/types").Json;
                group_id: string | null;
                id: string;
                img: string;
                min_node: import("@firejet-sync/shared/types").Json;
                object_tree: import("@firejet-sync/shared/types").Json;
                original_scene_node: import("@firejet-sync/shared/types").Json;
                pro_email: string | null;
            };
            Insert: {
                code: string;
                code_meta_tree: import("@firejet-sync/shared/types").Json;
                component_def?: import("@firejet-sync/shared/types").Json | null;
                component_name: string;
                conditionals?: import("@firejet-sync/shared/types").Json | null;
                fixed_scene_node: import("@firejet-sync/shared/types").Json;
                group_id?: string | null;
                id?: string;
                img: string;
                min_node: import("@firejet-sync/shared/types").Json;
                object_tree: import("@firejet-sync/shared/types").Json;
                original_scene_node: import("@firejet-sync/shared/types").Json;
                pro_email?: string | null;
            };
            Update: {
                code?: string;
                code_meta_tree?: import("@firejet-sync/shared/types").Json;
                component_def?: import("@firejet-sync/shared/types").Json | null;
                component_name?: string;
                conditionals?: import("@firejet-sync/shared/types").Json | null;
                fixed_scene_node?: import("@firejet-sync/shared/types").Json;
                group_id?: string | null;
                id?: string;
                img?: string;
                min_node?: import("@firejet-sync/shared/types").Json;
                object_tree?: import("@firejet-sync/shared/types").Json;
                original_scene_node?: import("@firejet-sync/shared/types").Json;
                pro_email?: string | null;
            };
            Relationships: [{
                foreignKeyName: "public_user_components_groupId_fkey";
                columns: ["group_id"];
                isOneToOne: false;
                referencedRelation: "user_compiled_codebase";
                referencedColumns: ["id"];
            }];
        };
        website_components: {
            Row: {
                component_name: string | null;
                created_at: string;
                created_by: string | null;
                id: number;
                img: string | null;
                min_node_path: string;
                screen_width: number | null;
                theme: string | null;
                website_url: string | null;
            };
            Insert: {
                component_name?: string | null;
                created_at?: string;
                created_by?: string | null;
                id?: number;
                img?: string | null;
                min_node_path: string;
                screen_width?: number | null;
                theme?: string | null;
                website_url?: string | null;
            };
            Update: {
                component_name?: string | null;
                created_at?: string;
                created_by?: string | null;
                id?: number;
                img?: string | null;
                min_node_path?: string;
                screen_width?: number | null;
                theme?: string | null;
                website_url?: string | null;
            };
            Relationships: [];
        };
    };
    Views: {
        signup_count: {
            Row: {
                id: number | null;
            };
            Insert: {
                id?: number | null;
            };
            Update: {
                id?: number | null;
            };
            Relationships: [];
        };
        users_view: {
            Row: {
                aud: string | null;
                banned_until: string | null;
                confirmation_sent_at: string | null;
                confirmation_token: string | null;
                confirmed_at: string | null;
                created_at: string | null;
                email: string | null;
                email_change: string | null;
                email_change_confirm_status: number | null;
                email_change_sent_at: string | null;
                email_change_token_current: string | null;
                email_change_token_new: string | null;
                email_confirmed_at: string | null;
                encrypted_password: string | null;
                id: string | null;
                instance_id: string | null;
                invited_at: string | null;
                is_super_admin: boolean | null;
                last_sign_in_at: string | null;
                phone: string | null;
                phone_change: string | null;
                phone_change_sent_at: string | null;
                phone_change_token: string | null;
                phone_confirmed_at: string | null;
                raw_app_meta_data: import("@firejet-sync/shared/types").Json | null;
                raw_user_meta_data: import("@firejet-sync/shared/types").Json | null;
                reauthentication_sent_at: string | null;
                reauthentication_token: string | null;
                recovery_sent_at: string | null;
                recovery_token: string | null;
                role: string | null;
                updated_at: string | null;
            };
            Insert: {
                aud?: string | null;
                banned_until?: string | null;
                confirmation_sent_at?: string | null;
                confirmation_token?: string | null;
                confirmed_at?: string | null;
                created_at?: string | null;
                email?: string | null;
                email_change?: string | null;
                email_change_confirm_status?: number | null;
                email_change_sent_at?: string | null;
                email_change_token_current?: string | null;
                email_change_token_new?: string | null;
                email_confirmed_at?: string | null;
                encrypted_password?: string | null;
                id?: string | null;
                instance_id?: string | null;
                invited_at?: string | null;
                is_super_admin?: boolean | null;
                last_sign_in_at?: string | null;
                phone?: string | null;
                phone_change?: string | null;
                phone_change_sent_at?: string | null;
                phone_change_token?: string | null;
                phone_confirmed_at?: string | null;
                raw_app_meta_data?: import("@firejet-sync/shared/types").Json | null;
                raw_user_meta_data?: import("@firejet-sync/shared/types").Json | null;
                reauthentication_sent_at?: string | null;
                reauthentication_token?: string | null;
                recovery_sent_at?: string | null;
                recovery_token?: string | null;
                role?: string | null;
                updated_at?: string | null;
            };
            Update: {
                aud?: string | null;
                banned_until?: string | null;
                confirmation_sent_at?: string | null;
                confirmation_token?: string | null;
                confirmed_at?: string | null;
                created_at?: string | null;
                email?: string | null;
                email_change?: string | null;
                email_change_confirm_status?: number | null;
                email_change_sent_at?: string | null;
                email_change_token_current?: string | null;
                email_change_token_new?: string | null;
                email_confirmed_at?: string | null;
                encrypted_password?: string | null;
                id?: string | null;
                instance_id?: string | null;
                invited_at?: string | null;
                is_super_admin?: boolean | null;
                last_sign_in_at?: string | null;
                phone?: string | null;
                phone_change?: string | null;
                phone_change_sent_at?: string | null;
                phone_change_token?: string | null;
                phone_confirmed_at?: string | null;
                raw_app_meta_data?: import("@firejet-sync/shared/types").Json | null;
                raw_user_meta_data?: import("@firejet-sync/shared/types").Json | null;
                reauthentication_sent_at?: string | null;
                reauthentication_token?: string | null;
                recovery_sent_at?: string | null;
                recovery_token?: string | null;
                role?: string | null;
                updated_at?: string | null;
            };
            Relationships: [];
        };
    };
    Functions: {
        check_permission: {
            Args: {
                projid: number;
            };
            Returns: string;
        };
        check_project_public: {
            Args: {
                projid: number;
            };
            Returns: string;
        };
        check_role: {
            Args: {
                projid: number;
            };
            Returns: string;
        };
        get_team_id: {
            Args: Record<PropertyKey, never>;
            Returns: string;
        };
        has_owner: {
            Args: {
                projid: number;
            };
            Returns: boolean;
        };
        insert_project_permission: {
            Args: {
                project_id: string;
                user_id: string;
            };
            Returns: undefined;
        };
    };
    Enums: {
        changelog_type: "BUG_FIX" | "FEATURE" | "INFO" | "INTERNAL";
        conversion_status: "SUCCESS" | "FAIL" | "PROCESSING";
        project_permissions: "public" | "private";
        user_permissions: "admin" | "owner" | "editor" | "viewer";
    };
    CompositeTypes: { [_ in never]: never; };
}>;
