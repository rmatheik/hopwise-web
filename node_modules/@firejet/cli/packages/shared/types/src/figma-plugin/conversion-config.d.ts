import { TailwindConfig } from '../tailwind-config';
export declare const FULL_CONVERSION_CONFIG: {
    framework: {
        type: "ENUM";
        readableName: string;
        values: ({
            name: "REACT";
            readableName: string;
            isDefault: true;
        } | {
            name: "VUE";
            readableName: string;
            isDefault?: undefined;
        } | {
            name: "HTML";
            readableName: string;
            isDefault?: undefined;
        } | {
            name: "SVELTE";
            readableName: string;
            isDefault?: undefined;
        } | {
            name: "UNIVERSAL_CODE_OUTPUT";
            readableName: string;
            isDefault?: undefined;
        })[];
    };
    tailwind: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: true;
    };
    typescript: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: true;
        activeQuality: {
            readability: number;
        };
        inactiveQuality: {
            readability: number;
        };
    };
    singleFile: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: false;
        activeQuality: {
            readability: number;
        };
        inactiveQuality: {
            readability: number;
        };
    };
    mergeSimilarLayouts: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: true;
        activeQuality: {
            readability: number;
        };
    };
    reshaped: {
        type: "BOOLEAN";
        readableName: string;
        beta: true;
        accessRequirement: "ENTERPRISE";
        defaultVal: false;
        activeQuality: {
            readability: number;
            responsiveness: number;
        };
    };
    componentization: {
        type: "BOOLEAN";
        readableName: string;
        accessRequirement: "ENTERPRISE";
        defaultVal: false;
        activeQuality: {
            readability: number;
        };
    };
    mergeResponsiveScreens: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: false;
        accessRequirement: "ENTERPRISE";
        activeQuality: {
            pixelPerfection: number;
            responsiveness: number;
        };
    };
    linkScreens: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: false;
        accessRequirement: "ENTERPRISE";
        activeQuality: {
            pixelPerfection: number;
            responsiveness: number;
        };
    };
    designSystemToComponents: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: false;
        accessRequirement: "ENTERPRISE";
    };
    autoFix: {
        type: "BOOLEAN";
        readableName: string;
        notes: string;
        defaultVal: true;
        beta: true;
        activeQuality: {
            readability: number;
            pixelPerfection: number;
            responsiveness: number;
        };
        inactiveQuality: {
            responsiveness: {
                base: number;
                design: number;
            };
        };
    };
    llmEnhancer: {
        type: "BOOLEAN";
        readableName: string;
        accessRequirement: "PRO";
        defaultVal: false;
        activeQuality: {
            readability: number;
        };
    };
    colorRounding: {
        readableName: string;
        type: "BOOLEAN";
        defaultVal: true;
        activeQuality: {
            pixelPerfection: number;
            readability: number;
        };
    };
    useExistingComponents: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: false;
        accessRequirement: "ENTERPRISE";
        beta: true;
        activeQuality: {
            readability: number;
        };
    };
    twRounding: {
        readableName: string;
        type: "NUMBER";
        minVal: number;
        maxVal: number;
        defaultVal: number;
        minQuality: {
            pixelPerfection: number;
            readability: number;
        };
        maxQuality: {
            readability: number;
            pixelPerfection: number;
        };
    };
    engine: {
        type: "ENUM";
        readableName: string;
        values: ({
            name: "one";
            readableName: string;
            disabled: true;
            isDefault?: undefined;
            beta?: undefined;
            quality?: undefined;
        } | {
            name: "two";
            readableName: string;
            isDefault: true;
            beta: true;
            quality: {
                pixelPerfection: number;
                readability: number;
                responsiveness: number;
            };
            disabled?: undefined;
        })[];
    };
    percentageWidths: {
        type: "BOOLEAN";
        readableName: string;
        defaultVal: false;
        beta: true;
        activeQuality: {
            pixelPerfection: number;
            responsiveness: number;
        };
    };
};
interface ConfigOptionBase {
    readableName: string;
    notes?: string;
    accessRequirement?: 'PRO' | 'ENTERPRISE';
}
/**If it is a single number, means the value is not affected by the design */
type IndividualQuality = {
    /**How much the option affects the metric (Independent of design quality) */
    base: number;
    /**How much the option affects the metric (Dependant o design quality) */
    design: number;
} | number;
/**Leave as empty if it doesn't affect */
type Quality = {
    readability?: IndividualQuality;
    pixelPerfection?: IndividualQuality;
    responsiveness?: IndividualQuality;
};
export interface EnumConfigOption extends ConfigOptionBase {
    type: 'ENUM';
    values: {
        name: string;
        readableName: string;
        isDefault?: true;
        /**Leave as empty if doesn't affect*/
        quality?: Quality;
        beta?: true;
        disabled?: boolean;
    }[];
}
export interface BooleanConfigOption extends ConfigOptionBase {
    type: 'BOOLEAN';
    /**How much the boolean affects when active */
    activeQuality?: Quality;
    /**How much the boolean affects when inactive */
    inactiveQuality?: Quality;
    defaultVal: boolean;
    beta?: true;
}
export interface NumberConfigOption extends ConfigOptionBase {
    type: 'NUMBER';
    defaultVal: number;
    minVal: number;
    maxVal: number;
    /**How much quality is affected when max */
    maxQuality?: Quality;
    /**How much quality is affected when min */
    minQuality?: Quality;
    beta?: true;
}
export type ConfigOption = (NumberConfigOption | BooleanConfigOption | EnumConfigOption) & ConfigOptionBase;
export type ConversionConfigFull = Record<string, ConfigOption>;
export type ConversionConfigBaseKeys = keyof typeof FULL_CONVERSION_CONFIG;
export type ConversionConfig = {
    [K in ConversionConfigBaseKeys]: (typeof FULL_CONVERSION_CONFIG)[K] extends EnumConfigOption ? (typeof FULL_CONVERSION_CONFIG)[K]['values'][number]['name'] : (typeof FULL_CONVERSION_CONFIG)[K] extends BooleanConfigOption ? boolean : (typeof FULL_CONVERSION_CONFIG)[K] extends NumberConfigOption ? number : never;
} & {
    tailwindConfig: undefined | TailwindConfig;
};
export declare const DEFAULT_CONFIG: ConversionConfig;
export {};
