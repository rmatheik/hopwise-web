export type CodeExpression = RawTSCode | FunctionDeclaration | SetState | Literal;
export declare const PROP_VAL = "props";
export interface RawTSCode {
    type: 'raw-ts';
    val: TSSourceCode;
}
export type NamedFunctionDeclaration = Required<FunctionDeclaration>;
export interface FunctionDeclaration {
    type: 'function-declaration';
    name?: string;
    parameters: string[];
    body: CodeExpression[];
}
export interface SetState {
    type: 'set-state';
    variableName: string;
    val: CodeExpression;
}
export type Literal = StringLiteral | NumberLiteral | BooleanLiteral | ObjectLiteral;
export interface StringLiteral {
    type: 'string';
    val: string;
}
export interface NumberLiteral {
    type: 'number';
    val: number;
}
export interface BooleanLiteral {
    type: 'boolean';
    val: boolean;
}
export interface ObjectLiteral {
    type: 'object';
    val: Record<string, CodeExpression>;
}
export type TSSourceCode = string;
