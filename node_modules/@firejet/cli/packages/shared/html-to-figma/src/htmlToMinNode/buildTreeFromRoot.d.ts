import { HtmlToFigmaSuccess, MinNode, MinSharedMeta, Rectangle } from '@firejet-sync/shared/types';
export interface TreeBuilderContext {
    rootEl: Element;
    rootRect: Rectangle;
    isValidTextParent: (possibleParent: Node) => boolean;
    parentRect: Rectangle;
    minSharedMeta: MinSharedMeta;
    processedMaskedNodes: Set<Element>;
}
export declare function buildTreeFromRoot(rootEl: HTMLElement): Promise<HtmlToFigmaSuccess | undefined>;
export type BuildNode = (el: Element, ctx: TreeBuilderContext) => Promise<MinNode[] | undefined>;
export type BuildMixin<T> = (el: Element, ctx: TreeBuilderContext) => Promise<T>;
