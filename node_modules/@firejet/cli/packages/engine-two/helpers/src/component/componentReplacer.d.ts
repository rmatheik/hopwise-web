import { CustomSceneNode, ComponentMeta, LayoutElementMeta, FieldRequired, ConversionConfig, ComponentDependency } from '@firejet-sync/shared/types';
import { PropMap } from './getComponentProps';
import { NameDeclasher } from '@firejet-sync/shared/helpers';
export interface ComponentReplacerStrat {
    name: string;
    replaceComponent(component: ComponentNode | ComponentSetNode, conversionConfig: ConversionConfig): {
        internalId: string;
        meta?: CustomSceneNode['meta'];
    } | undefined;
    processInstance(instance: CustomSceneNode, conversionConfig: ConversionConfig): CustomSceneNode;
    getConversionComponentMeta(component: CustomSceneNode, conversionConfig: ConversionConfig): ConversionComponentMeta | undefined;
}
export interface InstanceHandlerMeta {
    convertNodeToLayoutMeta(node: CustomSceneNode): Promise<LayoutElementMeta | undefined>;
    dependencies: ComponentMeta['dependencies'];
}
export type InstanceHandler = (node: FieldRequired<CustomSceneNode, 'componentProperties'>, baseLayout: LayoutElementMeta, meta: InstanceHandlerMeta) => Promise<(LayoutElementMeta & {
    fallthrough?: false;
}) | {
    fallthrough: true;
    meta?: LayoutElementMeta['meta'];
}>;
export type ConversionComponentMeta = {
    generateComponentMeta: true;
    namePscl: string;
    node: CustomSceneNode;
    used: boolean;
    props: ComponentMeta['props'];
    propMap: PropMap;
    dep: ComponentDependency;
} | {
    generateComponentMeta: false;
    namePscl: string;
    node: CustomSceneNode;
    used: boolean;
    handleInstance: InstanceHandler;
};
export declare const REPLACERS: ComponentReplacerStrat[];
export declare const REPLACER_OBJ: Partial<Record<string, ComponentReplacerStrat>>;
export declare const tryReplaceComponent: ComponentReplacerStrat['replaceComponent'];
export declare function processInstance(instance: CustomSceneNode, conversionConfig: ConversionConfig): CustomSceneNode;
export declare function getConversionComponentMeta(node: CustomSceneNode, conversionConfig: ConversionConfig, declasher: NameDeclasher): ConversionComponentMeta | undefined;
export declare function getDefaultConverionComponentMeta(node: CustomSceneNode, declasher: NameDeclasher): ConversionComponentMeta;
