import { CustomSceneNode } from '@firejet-sync/shared/types';
import { ComponentMeta } from '@firejet-sync/shared/types';
export declare function getFullComponentPropMeta(node: CustomSceneNode): {
    props: ComponentMeta['props'];
    propMap: PropMap;
};
export type PropMap = Record<string, PropVal>;
export type PropVal = PropValLiteral | PropValBoolean | PropValElement | PropValString;
export interface PropValBase {
    type: string;
    cleanedKey: string;
}
export interface PropValLiteral extends PropValBase {
    type: 'literal';
    defaultValue: string;
    cleanedValMap: {
        [k: string]: string;
    };
}
export interface PropValString extends PropValBase {
    type: 'string';
    defaultValue: string;
}
export interface PropValBoolean extends PropValBase {
    type: 'boolean';
    defaultValue: boolean;
}
export interface PropValElement extends PropValBase {
    type: 'element';
}
export declare function getPropMap(props: ComponentMeta['props']): PropMap;
